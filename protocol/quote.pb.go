// Code generated by protoc-gen-go.
// source: quote.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	quote.proto
	trade.proto

It has these top-level messages:
	PBQuoteSymbol
	PBFutureTick
	PBFutureKLine
	PBFutureOBItem
	PBFutureDepth
	PBFutureTrade
	PBFutureIndex
	PBFContractMoneyInfo
	PBFMoneyInfo
	PBFContractPosInfo
	PBFOrderInfo
	RspInfo
	PBFReqQryMoneyInfo
	PBFRspQryMoneyInfo
	PBFReqQryPosInfo
	PBFRspQryPosInfo
	PBFReqSetOrder
	PBFRspSetOrder
	PBFReqQryOrders
	PBFRspQryOrders
	PBFReqCancelOrders
	PBFRspCancelOrders
	PBFReqTransferMoney
	PBFRspTransferMoney
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PBQuoteSymbol struct {
	Exchange         *string `protobuf:"bytes,1,opt,name=exchange" json:"exchange,omitempty"`
	Symbol           *string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
	ContractType     *string `protobuf:"bytes,3,opt,name=contract_type,json=contractType" json:"contract_type,omitempty"`
	Timestamp        *uint64 `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PBQuoteSymbol) Reset()                    { *m = PBQuoteSymbol{} }
func (m *PBQuoteSymbol) String() string            { return proto.CompactTextString(m) }
func (*PBQuoteSymbol) ProtoMessage()               {}
func (*PBQuoteSymbol) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PBQuoteSymbol) GetExchange() string {
	if m != nil && m.Exchange != nil {
		return *m.Exchange
	}
	return ""
}

func (m *PBQuoteSymbol) GetSymbol() string {
	if m != nil && m.Symbol != nil {
		return *m.Symbol
	}
	return ""
}

func (m *PBQuoteSymbol) GetContractType() string {
	if m != nil && m.ContractType != nil {
		return *m.ContractType
	}
	return ""
}

func (m *PBQuoteSymbol) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

// 期货合约分笔数据 tick
type PBFutureTick struct {
	Vol              *float32       `protobuf:"fixed32,1,opt,name=vol" json:"vol,omitempty"`
	High             *float32       `protobuf:"fixed32,2,opt,name=high" json:"high,omitempty"`
	Low              *float32       `protobuf:"fixed32,3,opt,name=low" json:"low,omitempty"`
	DayVol           *float32       `protobuf:"fixed32,4,opt,name=dayVol" json:"dayVol,omitempty"`
	DayHigh          *float32       `protobuf:"fixed32,5,opt,name=dayHigh" json:"dayHigh,omitempty"`
	DayLow           *float32       `protobuf:"fixed32,6,opt,name=dayLow" json:"dayLow,omitempty"`
	Last             *float32       `protobuf:"fixed32,7,opt,name=last" json:"last,omitempty"`
	Bid              *float32       `protobuf:"fixed32,8,opt,name=bid" json:"bid,omitempty"`
	Ask              *float32       `protobuf:"fixed32,9,opt,name=ask" json:"ask,omitempty"`
	BidVol           *float32       `protobuf:"fixed32,10,opt,name=bidVol" json:"bidVol,omitempty"`
	AskVol           *float32       `protobuf:"fixed32,11,opt,name=askVol" json:"askVol,omitempty"`
	Sinfo            *PBQuoteSymbol `protobuf:"bytes,12,opt,name=sinfo" json:"sinfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *PBFutureTick) Reset()                    { *m = PBFutureTick{} }
func (m *PBFutureTick) String() string            { return proto.CompactTextString(m) }
func (*PBFutureTick) ProtoMessage()               {}
func (*PBFutureTick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PBFutureTick) GetVol() float32 {
	if m != nil && m.Vol != nil {
		return *m.Vol
	}
	return 0
}

func (m *PBFutureTick) GetHigh() float32 {
	if m != nil && m.High != nil {
		return *m.High
	}
	return 0
}

func (m *PBFutureTick) GetLow() float32 {
	if m != nil && m.Low != nil {
		return *m.Low
	}
	return 0
}

func (m *PBFutureTick) GetDayVol() float32 {
	if m != nil && m.DayVol != nil {
		return *m.DayVol
	}
	return 0
}

func (m *PBFutureTick) GetDayHigh() float32 {
	if m != nil && m.DayHigh != nil {
		return *m.DayHigh
	}
	return 0
}

func (m *PBFutureTick) GetDayLow() float32 {
	if m != nil && m.DayLow != nil {
		return *m.DayLow
	}
	return 0
}

func (m *PBFutureTick) GetLast() float32 {
	if m != nil && m.Last != nil {
		return *m.Last
	}
	return 0
}

func (m *PBFutureTick) GetBid() float32 {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return 0
}

func (m *PBFutureTick) GetAsk() float32 {
	if m != nil && m.Ask != nil {
		return *m.Ask
	}
	return 0
}

func (m *PBFutureTick) GetBidVol() float32 {
	if m != nil && m.BidVol != nil {
		return *m.BidVol
	}
	return 0
}

func (m *PBFutureTick) GetAskVol() float32 {
	if m != nil && m.AskVol != nil {
		return *m.AskVol
	}
	return 0
}

func (m *PBFutureTick) GetSinfo() *PBQuoteSymbol {
	if m != nil {
		return m.Sinfo
	}
	return nil
}

// 期货合约K线数据 kline
type PBFutureKLine struct {
	Open             *float32       `protobuf:"fixed32,1,opt,name=open" json:"open,omitempty"`
	High             *float32       `protobuf:"fixed32,2,opt,name=high" json:"high,omitempty"`
	Low              *float32       `protobuf:"fixed32,3,opt,name=low" json:"low,omitempty"`
	Close            *float32       `protobuf:"fixed32,4,opt,name=close" json:"close,omitempty"`
	Vol              *float32       `protobuf:"fixed32,5,opt,name=vol" json:"vol,omitempty"`
	Amount           *float32       `protobuf:"fixed32,6,opt,name=amount" json:"amount,omitempty"`
	Kind             *int32         `protobuf:"varint,7,opt,name=kind" json:"kind,omitempty"`
	Sinfo            *PBQuoteSymbol `protobuf:"bytes,8,opt,name=sinfo" json:"sinfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *PBFutureKLine) Reset()                    { *m = PBFutureKLine{} }
func (m *PBFutureKLine) String() string            { return proto.CompactTextString(m) }
func (*PBFutureKLine) ProtoMessage()               {}
func (*PBFutureKLine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PBFutureKLine) GetOpen() float32 {
	if m != nil && m.Open != nil {
		return *m.Open
	}
	return 0
}

func (m *PBFutureKLine) GetHigh() float32 {
	if m != nil && m.High != nil {
		return *m.High
	}
	return 0
}

func (m *PBFutureKLine) GetLow() float32 {
	if m != nil && m.Low != nil {
		return *m.Low
	}
	return 0
}

func (m *PBFutureKLine) GetClose() float32 {
	if m != nil && m.Close != nil {
		return *m.Close
	}
	return 0
}

func (m *PBFutureKLine) GetVol() float32 {
	if m != nil && m.Vol != nil {
		return *m.Vol
	}
	return 0
}

func (m *PBFutureKLine) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *PBFutureKLine) GetKind() int32 {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return 0
}

func (m *PBFutureKLine) GetSinfo() *PBQuoteSymbol {
	if m != nil {
		return m.Sinfo
	}
	return nil
}

// 盘口档位 order book item
type PBFutureOBItem struct {
	Price            *float32 `protobuf:"fixed32,1,opt,name=price" json:"price,omitempty"`
	Vol              *float32 `protobuf:"fixed32,2,opt,name=vol" json:"vol,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PBFutureOBItem) Reset()                    { *m = PBFutureOBItem{} }
func (m *PBFutureOBItem) String() string            { return proto.CompactTextString(m) }
func (*PBFutureOBItem) ProtoMessage()               {}
func (*PBFutureOBItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PBFutureOBItem) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *PBFutureOBItem) GetVol() float32 {
	if m != nil && m.Vol != nil {
		return *m.Vol
	}
	return 0
}

// 盘口深度
type PBFutureDepth struct {
	Asks             []*PBFutureOBItem `protobuf:"bytes,1,rep,name=asks" json:"asks,omitempty"`
	Bids             []*PBFutureOBItem `protobuf:"bytes,2,rep,name=bids" json:"bids,omitempty"`
	Sinfo            *PBQuoteSymbol    `protobuf:"bytes,3,opt,name=sinfo" json:"sinfo,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PBFutureDepth) Reset()                    { *m = PBFutureDepth{} }
func (m *PBFutureDepth) String() string            { return proto.CompactTextString(m) }
func (*PBFutureDepth) ProtoMessage()               {}
func (*PBFutureDepth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PBFutureDepth) GetAsks() []*PBFutureOBItem {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *PBFutureDepth) GetBids() []*PBFutureOBItem {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *PBFutureDepth) GetSinfo() *PBQuoteSymbol {
	if m != nil {
		return m.Sinfo
	}
	return nil
}

// 逐笔数据
type PBFutureTrade struct {
	TradeSeq         *string        `protobuf:"bytes,1,opt,name=tradeSeq" json:"tradeSeq,omitempty"`
	Price            *float32       `protobuf:"fixed32,2,opt,name=price" json:"price,omitempty"`
	Vol              *float32       `protobuf:"fixed32,3,opt,name=vol" json:"vol,omitempty"`
	BsCode           *string        `protobuf:"bytes,4,opt,name=bsCode" json:"bsCode,omitempty"`
	Amount           *int32         `protobuf:"varint,5,opt,name=amount" json:"amount,omitempty"`
	Sinfo            *PBQuoteSymbol `protobuf:"bytes,6,opt,name=sinfo" json:"sinfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *PBFutureTrade) Reset()                    { *m = PBFutureTrade{} }
func (m *PBFutureTrade) String() string            { return proto.CompactTextString(m) }
func (*PBFutureTrade) ProtoMessage()               {}
func (*PBFutureTrade) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PBFutureTrade) GetTradeSeq() string {
	if m != nil && m.TradeSeq != nil {
		return *m.TradeSeq
	}
	return ""
}

func (m *PBFutureTrade) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *PBFutureTrade) GetVol() float32 {
	if m != nil && m.Vol != nil {
		return *m.Vol
	}
	return 0
}

func (m *PBFutureTrade) GetBsCode() string {
	if m != nil && m.BsCode != nil {
		return *m.BsCode
	}
	return ""
}

func (m *PBFutureTrade) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *PBFutureTrade) GetSinfo() *PBQuoteSymbol {
	if m != nil {
		return m.Sinfo
	}
	return nil
}

// 合约指数
type PBFutureIndex struct {
	FutureIndex      *float32       `protobuf:"fixed32,1,opt,name=futureIndex" json:"futureIndex,omitempty"`
	Sinfo            *PBQuoteSymbol `protobuf:"bytes,2,opt,name=sinfo" json:"sinfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *PBFutureIndex) Reset()                    { *m = PBFutureIndex{} }
func (m *PBFutureIndex) String() string            { return proto.CompactTextString(m) }
func (*PBFutureIndex) ProtoMessage()               {}
func (*PBFutureIndex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PBFutureIndex) GetFutureIndex() float32 {
	if m != nil && m.FutureIndex != nil {
		return *m.FutureIndex
	}
	return 0
}

func (m *PBFutureIndex) GetSinfo() *PBQuoteSymbol {
	if m != nil {
		return m.Sinfo
	}
	return nil
}

func init() {
	proto.RegisterType((*PBQuoteSymbol)(nil), "PBQuoteSymbol")
	proto.RegisterType((*PBFutureTick)(nil), "PBFutureTick")
	proto.RegisterType((*PBFutureKLine)(nil), "PBFutureKLine")
	proto.RegisterType((*PBFutureOBItem)(nil), "PBFutureOBItem")
	proto.RegisterType((*PBFutureDepth)(nil), "PBFutureDepth")
	proto.RegisterType((*PBFutureTrade)(nil), "PBFutureTrade")
	proto.RegisterType((*PBFutureIndex)(nil), "PBFutureIndex")
}

func init() { proto.RegisterFile("quote.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 511 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x8e, 0xd3, 0x3c,
	0x14, 0x55, 0xdc, 0xa6, 0xd3, 0x3a, 0x9d, 0xf9, 0x3e, 0x59, 0x08, 0x59, 0x88, 0x45, 0xd4, 0x61,
	0xd1, 0x55, 0x17, 0xb3, 0x62, 0x5d, 0x10, 0x62, 0x44, 0x25, 0x06, 0x4f, 0x05, 0x12, 0x1b, 0xe4,
	0xc4, 0x9e, 0xa9, 0x95, 0x1f, 0x67, 0x62, 0x97, 0x4e, 0x56, 0xec, 0x78, 0x0c, 0xf6, 0x3c, 0x07,
	0x2f, 0x86, 0xae, 0x9d, 0x34, 0xad, 0x04, 0x15, 0xbb, 0x7b, 0xce, 0x75, 0xee, 0x39, 0xf7, 0x58,
	0x0e, 0x8e, 0x1e, 0xb6, 0xda, 0xca, 0x45, 0x55, 0x6b, 0xab, 0x67, 0xdf, 0x03, 0x7c, 0x7e, 0xb3,
	0xfc, 0x00, 0xcc, 0x6d, 0x53, 0x24, 0x3a, 0x27, 0xcf, 0xf0, 0x58, 0x3e, 0xa6, 0x1b, 0x5e, 0xde,
	0x4b, 0x1a, 0xc4, 0xc1, 0x7c, 0xc2, 0xf6, 0x98, 0x3c, 0xc5, 0x23, 0xe3, 0x4e, 0x51, 0xe4, 0x3a,
	0x2d, 0x22, 0x97, 0xf8, 0x3c, 0xd5, 0xa5, 0xad, 0x79, 0x6a, 0xbf, 0xd8, 0xa6, 0x92, 0x74, 0xe0,
	0xda, 0xd3, 0x8e, 0x5c, 0x37, 0x95, 0x24, 0xcf, 0xf1, 0xc4, 0xaa, 0x42, 0x1a, 0xcb, 0x8b, 0x8a,
	0x0e, 0xe3, 0x60, 0x3e, 0x64, 0x3d, 0x31, 0xfb, 0x81, 0xf0, 0xf4, 0x66, 0xf9, 0x66, 0x6b, 0xb7,
	0xb5, 0x5c, 0xab, 0x34, 0x23, 0xff, 0xe3, 0xc1, 0x57, 0x9d, 0x3b, 0x0b, 0x88, 0x41, 0x49, 0x08,
	0x1e, 0x6e, 0xd4, 0xfd, 0xc6, 0x69, 0x23, 0xe6, 0x6a, 0x38, 0x95, 0xeb, 0x9d, 0xd3, 0x43, 0x0c,
	0x4a, 0xf0, 0x28, 0x78, 0xf3, 0x51, 0xe7, 0x4e, 0x03, 0xb1, 0x16, 0x11, 0x8a, 0xcf, 0x04, 0x6f,
	0xde, 0xc2, 0x80, 0xd0, 0x35, 0x3a, 0xd8, 0x7e, 0xb1, 0xd2, 0x3b, 0x3a, 0xda, 0x7f, 0xb1, 0xd2,
	0x3b, 0xd0, 0xcb, 0xb9, 0xb1, 0xf4, 0xcc, 0xeb, 0x41, 0x0d, 0x7a, 0x89, 0x12, 0x74, 0xec, 0xf5,
	0x12, 0x25, 0x80, 0xe1, 0x26, 0xa3, 0x13, 0xcf, 0x70, 0x93, 0xc1, 0xbc, 0x44, 0x09, 0x70, 0x80,
	0xfd, 0x3c, 0x8f, 0x80, 0xe7, 0x26, 0x03, 0x3e, 0xf2, 0xbc, 0x47, 0xe4, 0x05, 0x0e, 0x8d, 0x2a,
	0xef, 0x34, 0x9d, 0xc6, 0xc1, 0x3c, 0xba, 0xba, 0x58, 0x1c, 0x5d, 0x08, 0xf3, 0xcd, 0xd9, 0x2f,
	0x77, 0x53, 0x3e, 0xa0, 0x77, 0x2b, 0x55, 0x4a, 0xf0, 0xa7, 0x2b, 0x59, 0xb6, 0x11, 0xb9, 0xfa,
	0x1f, 0x33, 0x7a, 0x82, 0xc3, 0x34, 0xd7, 0x46, 0xb6, 0x11, 0x79, 0xd0, 0x25, 0x1e, 0xf6, 0x89,
	0x83, 0xe3, 0x42, 0x6f, 0x4b, 0xdb, 0x25, 0xe3, 0x11, 0xa8, 0x64, 0xaa, 0x14, 0x2e, 0x99, 0x90,
	0xb9, 0xba, 0xdf, 0x62, 0x7c, 0x6a, 0x8b, 0x97, 0xf8, 0xa2, 0x5b, 0xe2, 0xfd, 0xf2, 0xda, 0xca,
	0x02, 0xbc, 0x54, 0xb5, 0x4a, 0x65, 0xbb, 0x86, 0x07, 0x9d, 0x17, 0xb4, 0xf7, 0x32, 0xfb, 0xd6,
	0xaf, 0xff, 0x5a, 0x56, 0x76, 0x43, 0x2e, 0xf1, 0x90, 0x9b, 0xcc, 0xd0, 0x20, 0x1e, 0xcc, 0xa3,
	0xab, 0xff, 0x16, 0xc7, 0x73, 0x99, 0x6b, 0xc2, 0xa1, 0x44, 0x09, 0x43, 0xd1, 0x5f, 0x0e, 0x41,
	0xb3, 0xb7, 0x3e, 0x38, 0x65, 0xfd, 0xe7, 0xc1, 0x05, 0xac, 0x6b, 0x2e, 0x24, 0x3c, 0x15, 0x0b,
	0xc5, 0xad, 0x7c, 0xe8, 0x9e, 0x4a, 0x87, 0xfb, 0xb5, 0xd0, 0x1f, 0xd6, 0x1a, 0x1c, 0x45, 0x9c,
	0x98, 0x57, 0x5a, 0xf8, 0xbb, 0x98, 0xb0, 0x16, 0x1d, 0x44, 0x1f, 0xba, 0x90, 0xbb, 0xe8, 0xf7,
	0x5e, 0x47, 0xa7, 0xbc, 0x7e, 0xea, 0xad, 0x5e, 0x97, 0x42, 0x3e, 0x92, 0x18, 0x47, 0x77, 0x3d,
	0x6c, 0xb3, 0x3e, 0xa4, 0xfa, 0xc1, 0xe8, 0xc4, 0xe0, 0x25, 0xfe, 0x3c, 0x76, 0x3f, 0x8e, 0x54,
	0xe7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x45, 0x0b, 0x63, 0x52, 0x49, 0x04, 0x00, 0x00,
}
